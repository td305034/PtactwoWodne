{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_parkContract",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "birds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "age",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "hunger",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "health",
						"type": "uint256"
					},
					{
						"internalType": "enum SpeciesLibrary.Species",
						"name": "species",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "lastUpdateTime",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isDead",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "deathTimestamp",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "foodAmount",
						"type": "uint256"
					}
				],
				"name": "feedBird",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "getBird",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "age",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "hunger",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "health",
								"type": "uint256"
							},
							{
								"internalType": "enum SpeciesLibrary.Species",
								"name": "species",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "lastUpdateTime",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isDead",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "deathTimestamp",
								"type": "uint256"
							}
						],
						"internalType": "struct Ptak.BirdData",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "birdId",
						"type": "uint256"
					}
				],
				"name": "getBirdImage",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "birdId",
						"type": "uint256"
					}
				],
				"name": "healBird",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "birdId",
						"type": "uint256"
					}
				],
				"name": "insure",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "insured",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum SpeciesLibrary.Species",
						"name": "species",
						"type": "uint8"
					}
				],
				"name": "mintBird",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nextId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "parkContract",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "birdId",
						"type": "uint256"
					}
				],
				"name": "revive",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_parkContract",
						"type": "address"
					}
				],
				"name": "setParkContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "birdId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferBird",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "updateHungerAndAge",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Ptak.sol": "Ptak"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Ptak.sol": {
			"keccak256": "0x3b4328b8e2a5cde45e99ca471376704bc292d0f914d5156ab5fd5a1b024ab1cc",
			"license": "MIT",
			"urls": [
				"bzz-raw://ae1b8d599629e24ea8f77909063727e8ab7223fa7c1d9f80300b8a7f093d35c3",
				"dweb:/ipfs/QmdUJBBJBUtay82Gsaitx6HfJnEL3KzMkaTMnccsH643KK"
			]
		},
		"contracts/SpeciesLibrary.sol": {
			"keccak256": "0xf3dd1da5f1e621905a5a595431558fd698c86b487274418c47756ca19a71d3ee",
			"license": "MIT",
			"urls": [
				"bzz-raw://df28dcbefbc3c4dfd655478f5d0afde22eaadce827f798b161e4b87b329e342e",
				"dweb:/ipfs/QmeQGkL7EJQcwhhgTeEyd2Ts9EKMmMVZyu7gDpz7vNikao"
			]
		}
	},
	"version": 1
}